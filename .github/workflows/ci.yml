name: Build, Lint and Publish

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build:
    name: CI
    runs-on: ubuntu-latest
    steps:
      - name: Set up GitHub Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up GitHub User
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Prepare .npmrc file
        run: |
          echo "@franklinjavier:registry=https://npm.pkg.github.com/" > $HOME/.npmrc
          echo "//npm.pkg.github.com/:_authToken=$NODE_AUTH_TOKEN" >> $HOME/.npmrc
          cat $HOME/.npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - run: yarn install --frozen-lockfile --check-files

      - name: Turbo Cache
        id: turbo-cache
        uses: actions/cache@v3.0.1
        with:
          path: .turbo
          key: turbo-${{ github.job }}-${{ github.ref_name }}-${{ steps.get-week.outputs.WEEK }}-${{ github.sha }}
          restore-keys: |
            turbo-${{ github.job }}-
            turbo-${{ github.job }}-${{ github.ref_name }}-${{ steps.get-week.outputs.WEEK }}-
            turbo-${{ github.job }}-canary-${{ steps.get-week.outputs.WEEK }}-

      - name: Build
        run: yarn build
        env:
          CI: true

      - name: Version
        id: changesets
        if: github.ref == 'refs/heads/main'
        uses: changesets/action@v1
        with:
          version: yarn changeset version
          commit: 'release: publish ðŸš€'
          title: 'release: publish ðŸš€'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish
        if: steps.changesets.outputs.hasChangesets == 'false'
        uses: changesets/action@v1
        with:
          publish: yarn publish-packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
